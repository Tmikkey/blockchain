@mixin media-min($_minWidth) {
  @media (min-width: $_minWidth) {
    @content
  }
}
@mixin media-max($_maxWidth) {
  @media (max-width: $_maxWidth) {
    @content
  }
}

@mixin links($_prefix: '', $_suffix: '') {
  #{$_prefix}a:not(.btn)#{$_suffix}, #{$_prefix}a:not(.btn):visited#{$_suffix}, #{$_prefix}a:not(.btn):hover#{$_suffix} {
    @content
  }
}

@mixin wrap-content($_selector, $_wrap: true) {
    @if $_wrap {
        #{$_selector} {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin flexbox-layout($_numCols: 12) {
    $_flexbox: '.flexbox-#{$_numCols}';

    //@for $i from 1 to $_numCols {
    //    .col-#{$i} {
    //        flex: 0 0 #{($i / $_numCols) * 100 + '%'};
    //        max-width: #{($i / $_numCols) * 100 + '%'};
    //    }
    //}

    @include wrap-content($_flexbox, $_numCols != 12) {
        @for $i from 1 to $_numCols {
            .col-#{$i} {
                flex: 0 0 #{($i / $_numCols) * 100 + '%'};
                max-width: #{($i / $_numCols) * 100 + '%'};
            }

            .offset-#{$i} {
                margin-left: #{($i / $_numCols) * 100 + '%'};
            }
        }

        .col-#{$_numCols} {
            float: none;
            flex: 0 0 100%;
            width: 100%;
            max-width: 100%;
        }
    }

    @include media-max($bp-large) {
        @include wrap-content($_flexbox, $_numCols != 12) {
            @for $i from 1 through $_numCols {
                .col-#{$i}-lg {
                    flex: 0 0 #{($i / $_numCols) * 100 + '%'};
                    max-width: #{($i / $_numCols) * 100 + '%'};
                }

                .offset-#{$i}-lg {
                    margin-left: #{($i / $_numCols) * 100 + '%'};
                }
            }
        }
    }

    @include media-max($bp-medium) {
        @include wrap-content($_flexbox, $_numCols != 12) {
            @for $i from 1 through $_numCols {
                .col-#{$i}-md {
                    flex: 0 0 #{($i / $_numCols) * 100 + '%'};
                    max-width: #{($i / $_numCols) * 100 + '%'};
                }

                .offset-#{$i}-md {
                    margin-left: #{($i / $_numCols) * 100 + '%'};
                }
            }
        }
    }

    @include media-max($bp-small) {
        @include wrap-content($_flexbox, $_numCols != 12) {
            @for $i from 1 through $_numCols {
                .col-#{$i}-sm {
                    flex: 0 0 #{($i / $_numCols) * 100 + '%'};
                    max-width: #{($i / $_numCols) * 100 + '%'};
                }

                .offset-#{$i}-sm {
                    margin-left: #{($i / $_numCols) * 100 + '%'};
                }
            }
        }
    }
}

@mixin flexbox-cols($_prefix: '', $_pfx: '') {
    #{$_prefix}.col#{$_pfx}, #{$_prefix}[class^="col-"]#{$_pfx}, #{$_prefix}[class*=" col-"]#{$_pfx} {
        @content
    }
}

$grid-rows-selector: '.row, [class^="row-"], [class*=" row-"]';


@mixin flexbox-rows($_prefix: '', $_pfx: '') {
    #{$_prefix}.row#{$_pfx}, #{$_prefix}[class^="row-"]#{$_pfx}, #{$_prefix}[class*=" row-"]#{$_pfx} {
        @content
    }
}

@mixin flexbox-rows-cols($_bp: '', $_numCols: 12) {
    @for $i from 1 through $_numCols {
        .row-#{$i}-cols#{$_bp} > .col {
            //@include grid-cols('> ') {
            flex: 0 0 #{(($_numCols / $i) / $_numCols) * 100 + '%'};
            max-width: #{(($_numCols / $i) / $_numCols) * 100 + '%'};
            //}
        }
    }
}
// grid layout
@mixin no-row-margins() {
    margin-right: 0;
    margin-left: 0;
}
